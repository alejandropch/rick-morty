{"version":3,"sources":["context/ThemeContext.js","components/Header.jsx","hooks/useCharacter.js","components/ChangeModeButton.jsx","components/Search.jsx","components/Characters.jsx","page/MainPage.jsx","components/App.js","index.js"],"names":["ThemeContext","React","createContext","Header","color","useContext","className","alt","style","useCharacter","url","useState","character","setCharacter","useEffect","fetch","then","responce","json","data","results","ChangeModeButton","darkMode","setDarkMode","updateMode","setUpdateMode","type","onClick","Search","handleSearch","searchInput","search","onChange","ref","value","Characters","setSearch","useReducer","state","action","allFavorites","payLoad","favorite","dispatch","useRef","prevCharacter","isMobile","test","navigator","userAgent","useCallback","current","characters","characterFilter","useMemo","filter","name","toLowerCase","includes","Fragment","length","map","favoriteCharacter","src","image","id","gender","status","species","MainPage","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.595c7b6a.chunk.js","sourcesContent":["import React from 'react'\n\nconst ThemeContext=React.createContext(null)\n\nexport default ThemeContext","import React,{useContext} from 'react'\nimport ThemeContext from '../context/ThemeContext'\n\nimport '../styles/header.css'\n\nexport default function Header() {\n\n \n\nconst color=useContext(ThemeContext)    \n\n\n\n    return (\n        <div className=\" Header\" alt=\"Cool Image of Rick & Morty\">\n            \n            <h1 className=\"Header__title\" style={{color}}>The Rick & Morty API</h1>\n           \n            \n        </div>\n    )\n}\n","import {useState,useEffect} from 'react'\n\nfunction useCharacter(url) {\n    \n    const [character,setCharacter]=useState([])\n    \n    useEffect(()=>{\n\n        fetch(url)\n        .then(responce=>responce.json())\n            .then(data=>setCharacter(data.results))\n\n       //when there is not nothing to listen, it will render once\n    },[url])\n\n\n\n    \n    return character\n}\n\nexport default useCharacter\n","import React,{useState, useContext} from 'react'\nimport ThemeContext from '../context/ThemeContext'\n\nimport '../styles/changeModeButton.css'\n\n\n\nexport default function ChangeModeButton() {\n\n\n    const [darkMode,setDarkMode]= useState(false)\n    \n    // am be able to entablish a conection between the app State with useContext\n    const {updateMode,setUpdateMode}=useContext(ThemeContext)\n\n    const handleClickStateMode=()=>{\n\n        setDarkMode(!darkMode)\n        updateMode==='dark-mode'?setUpdateMode('light-mode'):setUpdateMode('dark-mode')\n      }\n\n\n\n  \n    return (\n   <div className=\"container__button\" > \n\n             <button className={updateMode+\" Header__button\"} type=\"button\" onClick={handleClickStateMode}>{darkMode? \"Dark Mode Baby\":\"Boring Light Mode\"}</button>\n        </div>\n\n    )\n}\n","import React from 'react'\n\nexport default function Search({handleSearch,searchInput,search}) {\n    return (\n        \n        <div className=\"container__search\">\n            <span className=\"container__search--icon\"></span><input type=\"text\" onChange={handleSearch} ref={searchInput} value={search}></input>\n\n        </div>\n    )\n}\n","import React ,{ useState,useReducer,useMemo,useRef, useCallback} from 'react'\n\nimport useCharacter from '../hooks/useCharacter'\nimport ButtonChange from './ChangeModeButton'\n\nimport '../styles/characters.css'\nimport Search from './Search'\n\nexport default function Characters() {\n    \n\n\n    const reducerCreated=(state,action) => {\n\n        switch(action.type) {\n        \n            case 'FAVORITE_CHARACTER':\n\n                return {\n                    ...state,\n                        // the first value is going to add all the \n                        // characters that you already have, and the second \n                        // one will add a new one\n                        allFavorites: [...state.allFavorites, action.payLoad]\n                }\n            \n                default: \n                    return state\n        }\n    }\n\n    const initialState ={\n\n        allFavorites: []\n    }\n   \n   \n    const [search, setSearch]=useState('')\n    const [favorite,dispatch]=useReducer(reducerCreated,initialState)\n    const searchInput=useRef(null)\n    let prevCharacter=''\n    let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\n\n        function handleClick(favoriteCharacter){\n    \n    // i repeat the same statement if somehow the user change to a mobile device without leaving or refresing the page, by doing this the user experience doesn't get affected\n            isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  \n         \n\n        //si el personaje que viene no es igual al primero, entonces debe tocar dos veces\n        if(isMobile && prevCharacter!==favoriteCharacter){\n            \n            prevCharacter=favoriteCharacter\n            return\n\n        }\n\n        //payload is the character that the user clicked\n        if(favorite.allFavorites.includes(favoriteCharacter)===false){\n        \n            dispatch({type:'FAVORITE_CHARACTER',payLoad:favoriteCharacter})\n        }\n        \n    }\n\n\n  \n\n    const handleSearch=useCallback(()=>{\n\n        setSearch(searchInput.current.value)\n\n        // in this case we dont need no listen an element   \n    },[])\n\n\n    const API=`https://rickandmortyapi.com/api/character/`\n    const characters=useCharacter(API)\n            \n    \n\n    const characterFilter=useMemo(()=>\n      \n      characters.filter((character)=>{\n\n            return character.name.toLowerCase().includes(search.toLowerCase())\n            \n        })\n    ,[characters,search])\n\n\n   \n    return ( \n   <React.Fragment>\n          \n    <div className=\"container\">\n        <ButtonChange />\n        <Search handleSearch={handleSearch} searchInput={searchInput} search={search}/>\n\n\n        <div className=\"container__favorite\">\n                \n\n\n\n            {(favorite.allFavorites.length ===0)?(isMobile)? <i> Double tap on your favorite character </i>:<i> Click on your favorite character </i>:  <i className=\"heart\" ></i>}\n\n            \n            {favorite.allFavorites.map(favoriteCharacter=><img key={favoriteCharacter.id} className=\"container__favorite--characters\" src={favoriteCharacter.image} />)}\n\n        </div>\n        <div className=\"container__cards\">\n        \n        {characterFilter.map(character=>(\n           <div onClick={()=>handleClick(character)}className=\"container__card\" key={character.id}>\n        \n                <h2 className=\"container__card--name\">{character.name}</h2>\n                <div className=\"container__card--subInfo\">\n\n\n                    <div className=\"subInfo__wall\">\n                    \n                        <li>Gender:{character.gender}</li>\n                        <li>Status: {character.status}</li>\n                        <li>Specie: {character.species}</li>\n                \n                    </div>\n                    <div className=\"subInfo__img--container\">\n                    <img className=\"subInfo__img\"src={ character.image} alt={character.name+\" photo\"} /> \n                    </div>\n                </div>\n            </div>\n            ))\n         }\n\n        </div> \n\n    </div>\n    </React.Fragment>\n    )\n}\n","import React,{useState} from 'react'\nimport ThemeContext from '../context/ThemeContext'\nimport Header from '../components/Header'\nimport Characters from '../components/Characters'\nimport '../styles/index.css';\n\nexport default function MainPage() {\n\nconst [updateMode,setUpdateMode]= useState('light-mode')\n\n    return (\n    <ThemeContext.Provider value={{updateMode,setUpdateMode}} >\n\n        <div className={updateMode + \" page\"}>\n             <Header/>\n             <Characters />\n        </div>\n    </ThemeContext.Provider>\n    )\n}\n","\nimport React from 'react'\nimport MainPage from '../page/MainPage'\n\nfunction App() {\n\n\n  return (<MainPage />);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}